openapi: 3.0.3
info:
  title: Eth Beacon Node API
  description: |
    API specification for the beacon node, which enables users to query and participate in Ethereum 2.0 phase 0 beacon chain.

    All requests by default send and receive JSON, and as such should have either or both of the "Content-Type: application/json"
    and "Accept: application/json" headers.  In addition, some requests can return data in the SSZ format.  To indicate that SSZ
    data is required in response to a request the header "Accept: application/octet-stream" should be sent.  Note that only a subset
    of requests can respond with data in SSZ format; these are noted in each individual request.

    API endpoints are individually versioned.  As such, there is no direct relationship between all v1 endpoints, all v2 endpoints,
    _etc._ and no such relationship should be inferred.  All JSON responses return the requested data under a `data` key in the top
    level of their response.  Additional metadata may or may not be present in other keys at the top level of the response, dependent
    on the endpoint.  The rules that require an increase in version number are as follows:

      - no field that is listed in an endpoint shall be removed without an increase in the version number
      - no field that is listed in an endpoint shall be altered in terms of format (_e.g._ from a string to an array) without an
        increase in the version number

    Note that it is possible for a field to be added to an endpoint's data or metadata without an increase in the version number.
  version: v2.4.2 - Ethereum Proof-of-Stake Consensus Specification v1.4.0-beta.1
  contact:
    name: Ethereum Github
    url: "https://github.com/ethereum/beacon-apis/issues"
  license:
    name: CC0-1.0
    url: "https://creativecommons.org/publicdomain/zero/1.0/"
servers:
  - url: "{server_url}"
    variables:
      server_url:
        description: Beacon node API url
        default: "http://public-mainnet-node.ethereum.org/"
tags:
  - name: Node
    description: Endpoints to query node related information.

paths:
  /eth/v1/node/identity:
    get:
      operationId: getNetworkIdentity
      tags:
        - Node
      summary: Get node network identity
      description: Retrieves data about the node's network presence
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                title: GetNetworkIdentityResponse
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      peer_id:
                        type: string
                        description: "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
                        example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                      enr:
                        type: string
                        description: "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)"
                        example: "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
                      p2p_addresses:
                        type: array
                        items:
                          allOf:
                            - type: string
                              description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                              example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                            - description: "Node's addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                      discovery_addresses:
                        type: array
                        items:
                          allOf:
                            - type: string
                              description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                              example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                            - description: "Node's addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                            - example: /ip4/7.7.7.7/udp/30303/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                      metadata:
                        type: object
                        description: "Based on eth2 [Metadata object](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/p2p-interface.md#metadata)"
                        required:
                          - seq_number
                          - attnets
                        properties:
                          seq_number:
                            allOf:
                              - description: "Uint64 starting at 0 used to version the node's metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1."
                              - type: string
                                example: "1"
                          attnets:
                            allOf:
                              - description: Bitvector representing the node's persistent attestation subnet subscriptions.
                              - type: string
                                # format: hex
                                pattern: "^0x[a-fA-F0-9]{2,}$"
                              - example: "0x0000000000000000"
                          syncnets:
                            allOf:
                              - description: "Bitvector representing the node's sync committee subnet subscriptions. This metadata is not present in phase0, but will be present in Altair."
                              - type: string
                                # format: hex
                                pattern: "^0x[a-fA-F0-9]{2,}$"
                              - example: "0x0f"
        "500":
          description: Beacon node internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: Internal server error
  /eth/v1/node/peers:
    get:
      operationId: getPeers
      tags:
        - Node
      summary: Get node network peers
      description: Retrieves data about the node's network peers. By default this returns all peers. Multiple query params are combined using AND conditions
      parameters:
        - name: state
          in: query
          required: false
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              enum:
                - disconnected
                - connecting
                - connected
                - disconnecting
        - name: direction
          in: query
          required: false
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              enum:
                - inbound
                - outbound
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                title: GetPeersResponse
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        peer_id:
                          type: string
                          description: "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
                          example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                        enr:
                          nullable: true
                          type: string
                          description: "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)"
                          example: "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
                        last_seen_p2p_address:
                          allOf:
                            - type: string
                              description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                              example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                            - description: Multiaddrs used in last peer connection.
                        state:
                          type: string
                          enum:
                            - disconnected
                            - connecting
                            - connected
                            - disconnecting
                        direction:
                          type: string
                          enum:
                            - inbound
                            - outbound
                  meta:
                    type: object
                    properties:
                      count:
                        description: Total number of items
                        type: number
                        example: 1
        "500":
          description: Beacon node internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: Internal server error
  "/eth/v1/node/peers/{peer_id}":
    get:
      operationId: getPeer
      tags:
        - Node
      summary: Get peer
      description: Retrieves data about the given peer
      parameters:
        - name: peer_id
          in: path
          required: true
          schema:
            type: string
            description: "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
            example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                title: GetPeerResponse
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      peer_id:
                        type: string
                        description: "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
                        example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                      enr:
                        nullable: true
                        type: string
                        description: "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)"
                        example: "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
                      last_seen_p2p_address:
                        allOf:
                          - type: string
                            description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                            example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                          - description: Multiaddrs used in last peer connection.
                      state:
                        type: string
                        enum:
                          - disconnected
                          - connecting
                          - connected
                          - disconnecting
                      direction:
                        type: string
                        enum:
                          - inbound
                          - outbound
        "400":
          description: The peer ID supplied could not be parsed
          content:
            application/json:
              schema:
                example:
                  code: 400
                  message: "Invalid peer ID: localhost"
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
        "404":
          description: Peer not found
          content:
            application/json:
              schema:
                example:
                  code: 404
                  message: Peer not found
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
        "500":
          description: Beacon node internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: Internal server error
  /eth/v1/node/peer_count:
    get:
      operationId: getPeerCount
      tags:
        - Node
      summary: Get peer count
      description: Retrieves number of known peers.
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                title: GetPeerCountResponse
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      disconnected:
                        allOf:
                          - type: string
                            example: "1"
                          - example: "12"
                      connecting:
                        allOf:
                          - type: string
                            example: "1"
                          - example: "34"
                      connected:
                        allOf:
                          - type: string
                            example: "1"
                          - example: "56"
                      disconnecting:
                        allOf:
                          - type: string
                            example: "1"
                          - example: "5"
        "500":
          description: Beacon node internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: Internal server error
  /eth/v1/node/version:
    get:
      operationId: getNodeVersion
      tags:
        - Node
      summary: Get version string of the running beacon node.
      description: "Requests that the beacon node identify information about its implementation in a format similar to a  [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) field."
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                title: GetVersionResponse
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      version:
                        type: string
                        description: "A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3)."
                        example: Lighthouse/v0.1.5 (Linux x86_64)
        "500":
          description: Beacon node internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: Internal server error
  /eth/v1/node/syncing:
    get:
      operationId: getSyncingStatus
      tags:
        - Node
        - ValidatorRequiredApi
      summary: Get node syncing status
      description: "Requests the beacon node to describe if it's currently syncing or not, and if it is, what block it is up to."
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                title: GetSyncingStatusResponse
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      head_slot:
                        allOf:
                          - description: Head slot node is trying to reach
                          - type: string
                            example: "1"
                      sync_distance:
                        allOf:
                          - description: How many slots node needs to process to reach head. 0 if synced.
                          - type: string
                            example: "1"
                      is_syncing:
                        allOf:
                          - type: boolean
                          - description: "Set to true if the node is syncing, false if the node is synced."
                      is_optimistic:
                        allOf:
                          - type: boolean
                          - description: Set to true if the node is optimistically tracking head.
                      el_offline:
                        allOf:
                          - type: boolean
                          - description: Set to true if the execution client is offline.
        "500":
          description: Beacon node internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: "Optional stacktraces, sent when node is in debug mode"
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: Internal server error
  /eth/v1/node/health:
    get:
      operationId: getHealth
      tags:
        - Node
      summary: Get health check
      description: Returns node health status in http status codes. Useful for load balancers.
      parameters:
        - name: syncing_status
          in: query
          required: false
          description: Customize syncing status instead of default status code (206)
          schema:
            type: integer
            minimum: 100
            maximum: 599
      responses:
        "200":
          description: Node is ready
        "206":
          description: Node is syncing but can serve incomplete data
        "400":
          description: Invalid syncing status code
        "503":
          description: Node not initialized or having issues
components:
  schemas:
    NetworkIdentity:
      type: object
      properties:
        peer_id:
          type: string
          description: "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
          example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
        enr:
          type: string
          description: "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)"
          example: "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
        p2p_addresses:
          type: array
          items:
            allOf:
              - type: string
                description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
              - description: "Node's addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
        discovery_addresses:
          type: array
          items:
            allOf:
              - type: string
                description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
                example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
              - description: "Node's addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
              - example: /ip4/7.7.7.7/udp/30303/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
        metadata:
          type: object
          description: "Based on eth2 [Metadata object](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/p2p-interface.md#metadata)"
          required:
            - seq_number
            - attnets
          properties:
            seq_number:
              allOf:
                - description: "Uint64 starting at 0 used to version the node's metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1."
                - type: string
                  example: "1"
            attnets:
              allOf:
                - description: Bitvector representing the node's persistent attestation subnet subscriptions.
                - type: string
                  format: hex
                  pattern: "^0x[a-fA-F0-9]{2,}$"
                - example: "0x0000000000000000"
            syncnets:
              allOf:
                - description: "Bitvector representing the node's sync committee subnet subscriptions. This metadata is not present in phase0, but will be present in Altair."
                - type: string
                  format: hex
                  pattern: "^0x[a-fA-F0-9]{2,}$"
                - example: "0x0f"
    Peer:
      type: object
      properties:
        peer_id:
          type: string
          description: "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
          example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
        enr:
          nullable: true
          type: string
          description: "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)"
          example: "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
        last_seen_p2p_address:
          allOf:
            - type: string
              description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
              example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
            - description: Multiaddrs used in last peer connection.
        state:
          type: string
          enum:
            - disconnected
            - connecting
            - connected
            - disconnecting
        direction:
          type: string
          enum:
            - inbound
            - outbound
    PeerId:
      type: string
      description: "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
      example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
    PeerConnectionState:
      type: string
      enum:
        - disconnected
        - connecting
        - connected
        - disconnecting
    PeerConnectionDirection:
      type: string
      enum:
        - inbound
        - outbound
    GenesisTime:
      allOf:
        - type: string
          example: "1"
        - example: "1590832934"
        - description: "The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began."
    Version:
      type: string
      description: "A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3)."
      example: Lighthouse/v0.1.5 (Linux x86_64)
